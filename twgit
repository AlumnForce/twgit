#!/bin/bash

# /bin/bash ~/twgit/twgit
#
# sudo vi /usr/local/bin/twgit
#	#!/bin/bash
#	/bin/bash ~/twgit/twgit $@
# sudo chmod +x /usr/local/bin/twgit
	

# .bash_profile
# function get_git_branch {
#     local branch=$(git branch --no-color 2>/dev/null | grep -P '^\*' | sed 's/* //')
#     [ ! -z "$branch" ] && echo " \[\e[1;30m\]git\[\e[1;35m\]$branch"
# }
# export PROMPT_COMMAND='PS1="\[\e[0;32m\]\h:\w$(get_git_branch)\[\e[1;32m\]\\$\[\e[m\] "'	

# TODO ne pas enchaîner les fetch
# TODO autocomplétion
# TODO autoincrement [major].[minor].[revision]

if [ "$DEBUG" = "1" ]; then
	set -x
fi

# Includes :
. `dirname $0`/conf/config.inc.sh
. $TWGIT_INC_DIR/common.inc.sh

function usage {
	echo; help 'Usage:'
	help_detail 'twgit <command> [action]'
	echo; help 'Available commands are:'
	help_detail '<b>feature</b>   Manage your feature branches.'
	help_detail '<b>release</b>   Manage your release branches.'
	help_detail '<b>hotfix</b>    Manage your hotfix branches.'
	help_detail '<b>tag</b>       Manage your tags.'
	help_detail '[help]    Display this help.'
	echo; help 'See also:'
	help_detail "Try 'twgit <command> [help]' for more details."
	echo
}

function main {
	if [ $# -lt 1 ]; then
		usage
		exit 1
	fi
	
	# load command:
	if [ ! -z "$1" ]; then
		local command="$1"; shift
		local command_file="$TWGIT_INC_DIR/twgit_$command.inc.sh";
		if [ "$command" = 'help' ]; then
			usage
			exit 0
		elif [ ! -e "$command_file" ]; then
			error "Command not found: '$command'"
			usage
			exit 1
		else
			. "$command_file"
		fi
	fi
	
	# run the specified action:
	local action='help'
	if [ ! -z "$1" ]; then
		action="$1"; shift
	fi
	local action_func_name="cmd_$action"
	if ! type "$action_func_name" >/dev/null 2>&1; then
		error "Unknown action: '$action'"
		usage
		exit 1
	else
		$action_func_name "$@"
	fi
}

assert_git_configured
main "$@"